package de.common.app.b;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.ApplicationContext;
import java.nio.charset.StandardCharsets;
import com.rabbitmq.client.Channel;
import com.rabbitmq.client.Connection;
import com.rabbitmq.client.ConnectionFactory;
import com.rabbitmq.client.DeliverCallback;

import de.common.app.b.service.EmailService;


@SpringBootApplication
public class Application {

    private final static String QUEUE_NAME = "q-kamran-test-01";

    private EmailService emailservice;
    
    public Application(EmailService emailservice) {
    	this.emailservice = emailservice;
    }
    
    public static void main(String[] argv) throws Exception { 
        
    	ConnectionFactory factory = new ConnectionFactory();
        //factory.setHost("localhost");
        factory.setHost("container-rabbitmq");
        Connection connection = factory.newConnection();
        Channel channel = connection.createChannel();

        channel.queueDeclare(QUEUE_NAME, false, false, false, null);
        System.out.println(" [*] Waiting for messages. To exit press CTRL+C");

        DeliverCallback deliverCallback = (consumerTag, delivery) -> {
            String message = new String(delivery.getBody(), StandardCharsets.UTF_8);
            System.out.println(" [x] Received '" + message + "'");
        };
        channel.basicConsume(QUEUE_NAME, true, deliverCallback, consumerTag -> { });
 
        ApplicationContext context = SpringApplication.run(Application.class, argv);
        Application app = context.getBean(Application.class);
        
        app.Run();
    }

	private void Run() {
		// TODO Auto-generated method stub
        emailservice.sendEmail("springB@local.de","App B testing","Dear World, you are beautifule Yours Sincerely Deaf World");
	}






}
